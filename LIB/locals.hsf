HEX \  RSTACK   Return stack, Local variables
    \   Copyright 1986 Harvard Softworks, All Rights Reserved


\ Modified for HSF2012  B.Fox

\  RSTACK has been improved to automatically compensate for return stack"
\  clutter generated by  n>R nR> nRDROP DO and cLOOP "
\  Limit of clutter and locals is 14 words, but it is easily extended." CR
\  *** This version was an experiment to create local variables"
\  like the FORTH object oriented language called NEON."
\  with very few mods I was able to make HS/FORTH behave like NEON"
\  with the exception that there is no return variables. Results of"
\  a WORD are left on the stack just like FORTH."
\ ( NEON is now called Yerks Forth and is in the public domain for the"
\   McIntosh computer.)"

\ SYNONYM 1R@ I   SYNONYM 2R@ I'
\ SYNONYM 3R@ J   SYNONYM 4R@ J'
\ SYNONYM 5R@ K   SYNONYM 6R@ K'

CODE   7R@  <% 53 8B5EF4 %>        NEXT. END-CODE
CODE   8R@  <% 53 8B5EF2 %>        NEXT.  END-CODE
CODE   9R@  <% 53 8B5EF0 %>        NEXT.  END-CODE
CODE  10R@  <% 53 8B5EEE %>        NEXT.  END-CODE    \ ad infinitum
CODE  11R@  <% 53 8B5EEC %>        NEXT.  END-CODE    \ extended for 2 levels of DO nesting
CODE  12R@  <% 53 8B5EEA %>        NEXT.  END-CODE    \   or any 4 extra words on RetStack
CODE  13R@  <% 53 8B5EE8 %>        NEXT.  END-CODE
CODE  14R@  <% 53 8B5EE6 %>        NEXT.  END-CODE
CODE   1R!  <% 895E00 5B %>        NEXT.  END-CODE
CODE   2R!  <% 895EFE 5B %>        NEXT.  END-CODE
CODE   3R!  <% 895EFC 5B %>        NEXT.  END-CODE
CODE   4R!  <% 895EFA 5B %>        NEXT.  END-CODE
CODE   5R!  <% 895EF8 5B %>        NEXT.  END-CODE
CODE   6R!  <% 895EF6 5B %>        NEXT.  END-CODE
CODE   7R!  <% 895EF4 5B %>        NEXT.  END-CODE
CODE   8R!  <% 895EF2 5B %>        NEXT.  END-CODE
CODE   9R!  <% 895EF0 5B %>        NEXT.  END-CODE
CODE  10R!  <% 895EEE 5B %>        NEXT.  END-CODE  \ ad infinitum
CODE  11R!  <% 895EEC 5B %>        NEXT.  END-CODE  \ extended for 4 extra words on RetStack
CODE  12R!  <% 895EEA 5B %>        NEXT.  END-CODE
CODE  13R!  <% 895EE8 5B %>        NEXT.  END-CODE
CODE  14R!  <% 895EE6 5B %>        NEXT.  END-CODE
CODE  D1R@  <% 53 FF7600 8B5EFE %> NEXT.  END-CODE
CODE  D2R@  <% 53 FF76FE 8B5EFC %> NEXT.  END-CODE  \ NOTE: word not dword indexing!
CODE  D3R@  <% 53 FF76FC 8B5EFA %> NEXT.  END-CODE
CODE  D4R@  <% 53 FF76FA 8B5EF8 %> NEXT.  END-CODE
CODE  D5R@  <% 53 FF76F8 8B5EF6 %> NEXT.  END-CODE
CODE  D6R@  <% 53 FF76F6 8B5EF4 %> NEXT.  END-CODE
CODE  D7R@  <% 53 FF76F4 8B5EF2 %> NEXT.  END-CODE
CODE  D8R@  <% 53 FF76F2 8B5EF0 %> NEXT.  END-CODE
CODE  D9R@  <% 53 FF76F0 8B5EEE %> NEXT.  END-CODE
CODE D10R@  <% 53 FF76EE 8B5EEC %> NEXT.  END-CODE  \ ad infinitum
CODE D11R@  <% 53 FF76EC 8B5EEA %> NEXT.  END-CODE
CODE D12R@  <% 53 FF76EA 8B5EE8 %> NEXT.  END-CODE
CODE D13R@  <% 53 FF76E8 8B5EE6 %> NEXT.  END-CODE
CODE D14R@  <% 53 FF76E6 8B5EE4 %> NEXT.  END-CODE
CODE  D1R!  <% 895EFE 8F4600 5B %> NEXT.  END-CODE
CODE  D2R!  <% 895EFC 8F46FE 5B %> NEXT.  END-CODE
CODE  D3R!  <% 895EFA 8F46FC 5B %> NEXT.  END-CODE
CODE  D4R!  <% 895EF8 8F46FA 5B %> NEXT.  END-CODE
CODE  D5R!  <% 895EF6 8F46F8 5B %> NEXT.  END-CODE
CODE  D6R!  <% 895EF4 8F46F6 5B %> NEXT.  END-CODE
CODE  D7R!  <% 895EF2 8F46F4 5B %> NEXT.  END-CODE
CODE  D8R!  <% 895EF0 8F46F2 5B %> NEXT.  END-CODE
CODE  D9R!  <% 895EEE 8F46F0 5B %> NEXT.  END-CODE
CODE D10R!  <% 895EEC 8F46EE 5B %> NEXT.  END-CODE  \ ad infinitum
CODE D11R!  <% 895EEA 8F46EC 5B %> NEXT.  END-CODE
CODE D12R!  <% 895EE8 8F46EA 5B %> NEXT.  END-CODE
CODE D13R!  <% 895EE6 8F46E8 5B %> NEXT.  END-CODE
CODE D14R!  <% 895EE4 8F46E6 5B %> NEXT.  END-CODE


\ Following templates for triple and quad versions are also easily extended.
\ CODE  T1R@  <% 53 FF7600 FF76FE 8B5EFC %> NEXT.  END-CODE
\ CODE  T2R@  <% 53 FF76FE FF76FC 8B5EFA %> NEXT.  END-CODE
\ CODE  T1R!  <% 895EFC 8F46FE 8F4600 5B %> NEXT.  END-CODE
\ CODE  T2R!  <% 895EFA 8F46FC 8F46FE 5B %> NEXT.  END-CODE
\ CODE  Q1R@  <% 53 FF7600 FF76FE FF76FC 8B5EFA %> NEXT.  END-CODE
\ CODE  Q2R@  <% 53 FF76FE FF76FC FF76FA 8B5EF8 %> NEXT.  END-CODE
\ CODE  Q1R!  <% 895EFA 8F46FC 8F46FE 8F4600 5B %> NEXT.  END-CODE
\ CODE  Q2R!  <% 895EF8 8F46FA 8F46FC 8F46FE 5B %> NEXT.  END-CODE

VARIABLE LOCAL1   
0 VALUE #LOCALS

LOCAL1 0!
WARNING 0!

 8 CONSTANT =8   10 CONSTANT =16   18 CONSTANT =24    20 CONSTANT =32
-8 CONSTANT =-8 -10 CONSTANT =-16 -18 CONSTANT =-24  -20 CONSTANT =-32

: RP-FRAME+  LOCAL1 @        
             IF  LATEST
                 BEGIN  
                    LOCAL1 @ OVER U<
                 WHILE
                    DUP C@E THE WIDTH AND - 2-   2DUP +!E  1-
                 REPEAT  
                 2DROP
             ELSE DROP
             THEN ;

: >R      COMPILE >R        =8 RP-FRAME+ ; IMMEDIATE
: 2>R     COMPILE 2>R      =16 RP-FRAME+ ; IMMEDIATE
: T>R     COMPILE T>R      =24 RP-FRAME+ ; IMMEDIATE
: Q>R     COMPILE Q>R      =32 RP-FRAME+ ; IMMEDIATE
: R>      COMPILE R>      =-8  RP-FRAME+ ; IMMEDIATE
: 2R>     COMPILE 2R>     =-16 RP-FRAME+ ; IMMEDIATE
: TR>     COMPILE TR>     =-24 RP-FRAME+ ; IMMEDIATE
: QR>     COMPILE QR>     =-32 RP-FRAME+ ; IMMEDIATE
: 2DROP   COMPILE 2DROP   =-8  RP-FRAME+ ; IMMEDIATE
: 2RDROP  COMPILE 2RDROP  =-16 RP-FRAME+ ; IMMEDIATE

[defined] TRDROP [if] : TRDROP  COMPILE TRDROP  =-24 RP-FRAME+ ; IMMEDIATE [then]
[defined] QRDROP [if] : QRDROP  COMPILE QRDROP  =-32 RP-FRAME+ ; IMMEDIATE [then]

: DO     [COMPILE] DO     =16  RP-FRAME+ ; IMMEDIATE
:  LOOP  [COMPILE]  LOOP  =-16 RP-FRAME+ ; IMMEDIATE
: /LOOP  [COMPILE] /LOOP  =-16 RP-FRAME+ ; IMMEDIATE
: +LOOP  [COMPILE] +LOOP  =-16 RP-FRAME+ ; IMMEDIATE

: CLEAR-LOCALS                    #LOCALS 0>
    IF #LOCALS NEGATE [COMPILE] LITERAL COMPILE RESERVE
       LOCAL1 ENDW @&!  AT #LOCALS 0! THEN   LOCAL1 0! ;

: ;       CLEAR-LOCALS  [COMPILE] ;     ; IMMEDIATE
: DOES>   CLEAR-LOCALS  [COMPILE] DOES> ; IMMEDIATE
: ;CODE   CLEAR-LOCALS  [COMPILE] ;CODE ; IMMEDIATE
: ;'      CLEAR-LOCALS  [COMPILE] ;'    ; IMMEDIATE            -1 WARNING !


CREATE LOCALS  CA'  1R! , CA'  I   ,    CA'  D1R! , CA'  D1R@ ,
               CA'  2R! , CA'  I'  ,    CA'  D2R! , CA'  D2R@ ,
               CA'  3R! , CA'  J   ,    CA'  D3R! , CA'  D3R@ ,
               CA'  4R! , CA'  J'  ,    CA'  D4R! , CA'  D4R@ ,
               CA'  5R! , CA'  K   ,    CA'  D5R! , CA'  D5R@ ,
               CA'  6R! , CA'  K'  ,    CA'  D6R! , CA'  D6R@ ,
               CA'  7R! , CA'  7R@ ,    CA'  D7R! , CA'  D7R@ ,
               CA'  8R! , CA'  8R@ ,    CA'  D8R! , CA'  D8R@ ,
               CA'  9R! , CA'  9R@ ,    CA'  D9R! , CA'  D9R@ ,
               CA' 10R! , CA' 10R@ ,    CA' D10R! , CA' D10R@ ,
               CA' 11R! , CA' 11R@ ,    CA' D11R! , CA' D11R@ ,
               CA' 12R! , CA' 12R@ ,    CA' D12R! , CA' D12R@ ,
               CA' 13R! , CA' 13R@ ,    CA' D13R! , CA' D13R@ ,
               CA' 14R! , CA' 14R@ ,    CA' D14R! , CA' D14R@ ,


: {
        HERE-W LOCAL1 !   AT #LOCALS 0!
        BEGIN
        THE >IN BL AWORD @ 2D01 <>
        WHILE
          #LOCALS 9 > ABORT" 9 local vars are max"
          LOCALS #LOCALS 8* 2+ +  HERE-W  ROT    HERE @ 3201 =
          IF
                DROP
                CREATE
                ENDL 2-!
                SWAP 4+ SWAP !E
                COMPILE 2>R
                AT #LOCALS 2+!
          ELSE
                IS >IN
                CREATE
                ENDL 2-! !E
                COMPILE >R
                AT #LOCALS 1+!
          THEN
        REPEAT
        DROP OKLW
        [char] } ()  ; IMMEDIATE


BEHEAD' #LOCALS
BEHEAD' LOCALS
BEHEAD' CLEAR-LOCALS

0 [if]

DECIMAL
\ Example:"
CR ." : POLY { X A B C - n }"
CR ."          A X * B + X * C + ; "

         : (A+B)/(C+D) { 2 A  2 B  C D - n }
                       A B D+  C D + M/ D. ;
[then]



\ DATES.FOX     all kinds of date formatting words    02MAR91  FOX
\ added string creation for more flexibility

DECIMAL

\ "This is an algorithm I've carried with me for 35 years, originally
\  in Assembler and Fortran II."   Wil Baden ?
\  It counts the number of days from March 1, 1900.

: UNDER+  ( a b c -- a+c b )  ROT + SWAP ;

: cday                        ( dd mm yyyy -- century_day )
      -3 under+    OVER  0<
      IF    12 under+   1-
      THEN
      1900 -   1461 4 */    SWAP   306 *    5 +    10 /   + +
 ;


: dow  ( cday -- day_of_week )  2 + 7 MOD 1+ ;             \ 7 is Sunday


( : TIME&DOW&DATE ( -- year month day day-of-week hour minutes seconds )

( How about TIME&DATE&DOW ? )

: 3DUP ( a b c --  a b c a b c )  DUP 2OVER ROT ;

: TIME&DATE&DOW ( -- sec min hour day month year day_of_week )
        3DUP cday dow
;

\ formatted number strings left on the string stack
: ##$  ( n -- $ )  0 <# # # #> >NEW:TOP$ ;
: ####$ ( n -- $ )  0 <# # # # # #> >NEW:TOP$ ;
: ##:$  ( n -- $ )  0 <# [CHAR] : HOLD  # # #> >NEW:TOP$ ;

: hh:mm:ss$  ( h s m -- )  ##: ##: ## ;

CREATE MONTH
  ," " ," Jan" ," Feb" ," Mar" ," Apr" ," May" ," Jun"
       ," Jul" ," Aug" ," Sep" ," Oct" ," Nov" ," Dec"

\ CREATE some punctuation strings to embedd in the ouput strings
create "/"     ," /"
create "."     ," ."
create ","     ," ,"
create "-"     ," -"
create BL$     1 C, BL C,

: ]MONTH   MONTH NTH$ ;

\ Now build the formatted strings
: M/D/Y$  ( d,m,y -- $ )  >R  ##$ "/" +$ SWAP ##$ +$ "/" +$  R> ####$ +$ ;

: Y-M-D$  ( d,m,y -- $ )  ####$ "-" +$ SWAP ##$ +$ "-" +$ SWAP ##$ +$ ;

: D.M.Y$  ( d,m,y -- $ )  >R SWAP  ##$ "." +$  SWAP  ##$ +$ "." +$ R> ####$ +$ ;

: M,D,Y$  ( d,m,y, -- $ )  >R  ]MONTH "," +$ SWAP ##$ +$  "," +$ R> ####$ +$ ;
: M_D,Y$  ( d,m,y, -- $ )  >R  ]MONTH BL$ +$ SWAP ##$ +$  "," +$ R> ####$ +$ ;

: FORTH-DATE$ ( d,m,y,-- $ )  >R SWAP ##$ SWAP ]MONTH +$ R> ##$ +$ ;




\ tools.hsf      extensions & additions by Brian Fox  OCT 1992, Mar 2005
\ based on toolbox 10/3/85     copyright 1983,1984,1985  HARVARD SOFTWORKS
\

\ Mar 14 2006 Added colour WORDS just for fun.
\ Apr moved colour WORDS to a separate file. (WORDS2.HSF)

ONLY FORTH DEFINITIONS

[undefined] ltblue  [if] include color.hsf    [then]


DECIMAL
27 CONSTANT <ESC>

: ?CR ( ? --) IF CR THEN ;

HEX
: <SDEPTH>     CONSOLE  3C EMIT  DEPTH 0 0 D.R 3E EMIT ;

: OK-OFF        ['] CONSOLE  TO PROMPT ;

: OK-ON         ['] <OK>     TO PROMPT ;

: SDEPTH        ['] <SDEPTH> TO PROMPT ;

\ ********************************************************************
6 VALUE SCREENDELAY

: ?abort ( ? -- ) if abort then ;

: PAUSESCREEN
        screendelay ms
        ekey? ekey>char dup
        if
            <esc> = ?abort
            ekey ekey>char <esc> = ?abort
        else
            drop
        then ;


\ DUMP utility ************************************************

: .##    ( n -- )
        SPACE  S>D   <# # # #> TYPE ;

: .#### ( seg offset -- )
        S>D <# # # # # #> TYPE ;

: .seg:adr ( seg adr -- )
      swap  .#### ." :" .#### ;

: es.bytes ( adr n -- )  \ ES contains the segment to use
         bounds
         DO
            I C@E  .##
         LOOP ;

: es.ascii ( adr n --)    \ print ascii values or '.' for non-printable chars
         bounds           \ ES contains the segment to use
         DO  I C@E
             DUP  BL [CHAR] ~ within? NOT
             IF DROP
               [CHAR] .
             THEN emit
         LOOP ;

\ DUMPL has been changed to look like dos debug. Segment is always shown
\ Example:
\ 1508:0000  04 00 45 58 49 54 84 08  00 4C 52 45 54 84 0C 00  ..EXIT...LRET...
\ 1508:0010  44 4C 49 54 84 0A 00 4C  49 54 83 0E 00 3C 3C 2C  DLIT...LIT...<<,

hex
: DUMPL ( seg offset n -- )
        BASE @ >R
        HEX
        ROT ES!        \ ES = segment address
        ( offset n )
        bounds                              \ now 'I' will be the offset address
        DO
            CR ES@ I .seg:adr space         \ print the seg:adr
            I     8 es.bytes SPACE          \ print 8 bytes of memory
            I 8 + 8 es.bytes  2 SPACES      \ print the next 8 bytes of memory
            I   010 es.ascii                \ print 16 ascii format BYTES
            pausescreen
        010 /LOOP                           \ increment the offset address by 16
        CR                                  \ new line
        R> BASE ! ;                         \ restore BASE

: DUMP ( adr n -- )
         LISTS @ -ROT DUMPL ;


\ code patching & code viewing *******************************************
: !% ( adr val - adr+1 ) OVER CODES @ SWAP C!L 1+  ; ( for alterations )

: .HEAD
        CODES @  OLDC @ HERE-C 2DUP U. - DUMPL ; ( dump current )

\ define some word types for COLOR coded WORDS

CA' KEY        CONSTANT auser-vector
CA' scr        CONSTANT auser-var
CA' auser-var  CONSTANT aconstant
CA' .HEAD      CONSTANT acolon
CA' LISTS      CONSTANT avar
ca' <dodoes>   CONSTANT adoer   \ children of CREATE DOES>


FALSE [IF]  **** this is not used at this time ****

: .CODE' ( -- <code word> )          \ hex dump a word's code
         SCREENDELAY >R

         200 TO SCREENDELAY
         CODES @  [COMPILE] CA'
         DUP ACOLON =
         IF CR  ." Colon definition, not CODE"
            DROP
         ELSE
             100 DUMPL
         THEN

         R> TO SCREENDELAY ;
[THEN]


\ stack viewer ***********************************************************
: .S
        DEPTH DUP
        IF SP@ S0 4-
           STACKS @ ES!
           DO
                I @E 0 D.
           -2 +LOOP
        ELSE ." Empty stack "
        THEN
        CR DROP ;


TRUE TO TOOLS            \ ANS flag indicates that Tools are loaded in the system


TRUE [if]

\ trace utility ***********************************************************

: .T
        DEPTH DUP
        IF      SP@ S0 cell- SWAP
                STACKS @ ES!
                DO
                  I @E 0 D.
                cell +LOOP
         ELSE ." Empty stack "
         THEN   CR DROP ;

: .RS  ( rp@ >4 -- )
        2DUP >
        IF      THE BASE -ROT HEX
                DO
                   STACKS @ I @L U.
                cell /LOOP
                TO BASE
        ELSE 2DROP
        THEN ;

: .WRDE      ES@ SWAP .WORD ES!   ;

: <TRACK>    SPACE .WRDE SPACE .S ;

: TRACK      OLDL @  [COMPILE] LITERAL  COMPILE  <TRACK>  ;  IMMEDIATE


WARNING OFF

: ?COLON        DUP@   ACOLON  = ;

: ?KIND
        CREATE
                [COMPILE] '  ,

        DOES>
                @ OVER =
                IF
                    DROP
                    TRUE
                ELSE
                    FALSE
                THEN ;


?KIND ?_EXIT    EXIT
?KIND ?BRANCH   BRANCH
?KIND ?0BRANCH  0BRANCH
?KIND ?<>BRANCH <>BRANCH
?KIND ?<LOOP>   <LOOP>
?KIND ?</LOOP>  </LOOP>
?KIND ?<+LOOP>  <+LOOP>
?KIND ?<.">     <.">
?KIND ?<ABORT"> <ABORT">
?KIND ?<,">     <,">
?KIND ?LIT      LIT
?KIND ?DLIT     DLIT

VARIABLE MARGIN
VARIABLE IP
VARIABLE HLD=
VARIABLE ?STEP

: >C1D     1D  THE OUT  - SPACES ;
: >C33     33  THE OUT  - SPACES ;

: INDENT   RP@ MARGIN @ - SPACES ;

: PAD+   HLD HLD= @&!   B0 LISTS 4+ +! ;
: PAD-                 -B0 LISTS 4+ +!   HLD= HLD @&! ;

: .BRANCH     3C EMIT  @+ 0 .R 3E EMIT ;

CREATE   TRACE-DEPTH  3 ,
CREATE   RECENT       0 ,

: TR.S
    ES@ >R
    >R >R
    PAD+ >C1D
    RP@ 06 - 0A    .RS
    33 THE OUT - DUP 0>
    IF  SPACES  ELSE   DROP CR  33 SPACES    THEN .S
      ?STEP @
       IF
          BEGIN
             ." E> " QUERY THE SPAN 2 <>  THE TIB @ 3E45 <> OR
          WHILE
             INTERPRET CR
          REPEAT
       THEN    PAD- R> R> R> ES! ;

: .STRING
        CH" EMIT SPACE 2+ COUNT 2DUP TYPE CH" EMIT  +  ;

: TRACE'

RP@   2+  MARGIN !    -2     [']
CR  >C1D  ." Return Stack" >C33 ." Parameter Stack" CR
BEGIN
 ?COLON  IF
 ?<.">     IF INDENT 2E EMIT   .STRING DUP@ CR ELSE
 ?<ABORT"> IF INDENT ." ABORT" .STRING SWAP
              IF ."   ok " DROP QUIT ELSE CR DUP@  THEN
         ELSE INDENT ." :" DUP .WRDE TR.S
              RECENT @ OVER U<
              RP@ MARGIN @ -   TRACE-DEPTH @ 2* < AND
              IF SWAP 2+ >R  @+
              ELSE SWAP IP ! EXECUTE CR IP  @  @+
              THEN
        THEN THEN
( primitive )
       ELSE      INDENT SPACE SPACE DUP                                ELSE

  ?<,">      IF  8 EMIT 8 EMIT 8 EMIT 8 EMIT    24 EMIT DUP 2+  SWAP
                                                        .STRING DUP@   ELSE
  ?0BRANCH   IF  PAD+  .BRANCH SWAP DUP .                 PAD-
                                     IF 2+ ELSE DUP@ + THEN     DUP@   ELSE
  ?<>BRANCH  IF  PAD+  .BRANCH SWAP DUP . 3 PICK DUP . =  PAD-
                               IF NIP 2+ ELSE DUP@ + THEN       DUP@   ELSE
  ?BRANCH    IF  PAD+  .BRANCH             PAD- DUP@ +          DUP@   ELSE
  ?<LOOP>    IF  SPACE       <LOOP>  [ 08 , ]       4+
                             BRANCH  [ 06 , ]    @+ +          DUP@   ELSE
  ?<+LOOP>   IF  SPACE  SWAP <+LOOP> [ 08 , ]       4+
                             BRANCH  [ 06 , ]    @+ +          DUP@   ELSE

  ?</LOOP>   IF  SPACE  SWAP </LOOP> [ 08 , ]       4+
                             BRANCH  [ 06 , ]    @+ +          DUP@   ELSE

  ?LIT       IF   @+        SPACE   DUP  PAD+  . PAD- SWAP      @+   ELSE

  ?DLIT      IF  2+ DUP  2@  SPACE  2DUP  PAD+ D. PAD- ROT  2+   @+   ELSE

  ?_EXIT     IF     DROP R>                                     DUP@   ELSE
                 SWAP IP !   SPACE  EXECUTE    IP @              @+
             THEN THEN THEN THEN THEN THEN THEN THEN THEN THEN  TR.S
        THEN PAUSESCREEN
      OVER 0=
UNTIL
2DROP ;



: TRACE
        ?STEP OFF
        TRACE' ;

: SSTRACE
          1 ?STEP  !
          TRACE' ;

WARNING 1-!

: .D            BASE @ SWAP DECIMAL . BASE ! ;


\ Define the kinds of words to find
CREATE BRANCHES
        5 ,
        ' BRANCH  ,
        ' 0BRANCH  ,
        ' <LOOP>  ,
        ' </LOOP>  ,
        ' <+LOOP> ,

CREATE STRINGS
        3 ,
        ' <."> ,
        ' <ABORT"> ,
        ' <,">    ,

CREATE LITS
        2 ,
        ' LIT   ,
        ' DLIT  ,

CREATE COMPILES
        2 ,
        ' COMPILE ,
        ' [COMPILE] ,

CREATE $"NAMES
        0 C, 2 C,
        CHAR . C,
        CHAR " C,
        6 HERE ," ABORT" C!
        CHAR " C,
        2 C,
        CHAR , C,
        CHAR " C,
        2 C,
        CHAR , C,
        CHAR " C,

\ changed from "show" in hs/forth to match industry norms
: SEE
  FIND-LPA DUP NFA C@E SWAP  @E  DUP@
  CA' CREATE -
  IF  CR ." CODE " .WORD
      CR ."     code "
      CR ." END-CODE"
      CR

  ELSE
        DUP
        CR ." : " .WORD CR
        2+
        BEGIN
             DUP@  OUT @ 48 > ?CR
             DUP ['] EXIT =
             IF ."  ; "
                2DROP 40 AND
                IF ." IMMEDIATE"
                THEN EXIT               \ we get out here in an unstructured way
             THEN
             DUP BRANCHES MEMBER?
             IF  .WORD
                  @+ 2/ SPACE DUP .D   0< ?CR 2+

             ELSE  DUP STRINGS MEMBER?  ?DUP
                   IF  $"NAMES SPACE .NTH$ SPACE DROP
                       2+ DUP 4- @ COMPILES MEMBER?   NOT
                       IF COUNT 2DUP TYPE +  CH" EMIT
                       THEN
                   ELSE  DUP LITS MEMBER?
                         IF SPACE ['] LIT =
                            IF    @+  . 2+
                            ELSE 2+ DUP 2@ D. 4+
                            THEN
                          ELSE    DUP ['] <DO> = ?CR .WORD 2+
                          THEN
                    THEN
             THEN
        AGAIN
THEN ;
 
[then]

TRUE TO TOOLS       \ tell the system the tools are loaded

decimal exit

 BEHEAD'' ?COLON .BRANCH
 BEHEAD'' BRANCHES $"NAMES
 BEHEAD' .RS
 BEHEAD' TR.S
 BEHEAD' TRACE'


DECIMAL


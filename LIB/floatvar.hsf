\ FLOATING.VAR     Copyright 1986, Harvard Softworks, All rights reserved.
\ Floating point vars   Transfer between memory and floating point stack.
\ dictionary layout, simple var   ( vadr  v!  v@  ,, val )
\ near array   ( vadr  v!  v@   ,,                   i [j] [k] [l] data-table )
\ far array    ( vadrL v!L v@L  ,,  offset para link abs  i [j] [[k]] [[[l]]] )
\ array index calc, all arrays  ( AX nn +[DI] MOV. BX MUL. AX POP. BX AX ADD. )


only forth also assembler also forth  definitions

DECIMAL

CR ." Answer Y or N to load or skip following  VAR  sets. "
CR ." The choices include  Simple variable, Local arrays, and Far arrays. "
CR ." VAR names follow form:  xxxVAR   nxxxVAR    nxxxVAR-FAR "
CR ." Where xxx is type:      R64  R32  R80  I64  I32  I16  BCD "
CR ." And n is dimension:      1    2    3    4 " CR

CR ." Double precision real (R64)"
cr ." Simple? "  ?YN
[IF] ." Y "
CODE   R64V!
        <% 9B DD5D04 9B %>
        NEXT.
END-CODE

CODE   R64V@
        <% 9B DD4502 9B %>
        NEXT.
END-CODE


0 8  ' MK-VAR   CA'  DOADR    CA'  R64V!  CA'  R64V@   VAR:    R64VAR

CODE R64V!L
        <% C47D04 9B  26 DD1D  9B %>
        NEXT.
END-CODE

CODE R64V@L
        <% C47D02 9B  26 DD05  9B %>
        NEXT.
END-CODE


0 8  ' MK-VARF  CA'  VADRL    CA'  R64V!L CA'  R64V@L  VAR:    R64VAR-FAR

\ BEHEAD'' R64V! R64V@
[THEN]


cr ." Local arrays? "
?YN [IF]   ." Y "

 CODE 4R64VADR  <% 8B450A F7E3 5B 01C3 %>
+CODE 3R64VADR <% 8B4508 F7E3 5B 01C3 %>
+CODE 2R64VADR <% 8B4506 F7E3 5B 01C3 %>
+CODE 1R64VADR <% B103 D3E3    8D590E %>
      NEXT.
END-CODE

 CODE 4R64V!   <% 8B4508 F7E3 5B 01C3 %>
+CODE 3R64V!   <% 8B4506 F7E3 5B 01C3 %>
+CODE 2R64V!   <% 8B4504 F7E3 5B 01C3 %>
+CODE 1R64V!   <% B103 D3E3   9B DD590C 5B 9B %>
      next.
END-CODE

 CODE 4R64V@   <% 8B4506 F7E3 5B 01C3 %>
+CODE 3R64V@   <% 8B4504 F7E3 5B 01C3 %>
+CODE 2R64V@   <% 8B4502 F7E3 5B 01C3 %>
+CODE 1R64V@   <% B103 D3E3   9B DD410A 5B 9B %>
        next.
END-CODE


1 8  ' MK-IVAR   CA' 1R64VADR  CA' 1R64V!  CA' 1R64V@  VAR:   1R64VAR
2 8  ' MK-IVAR   CA' 2R64VADR  CA' 2R64V!  CA' 2R64V@  VAR:   2R64VAR
3 8  ' MK-IVAR   CA' 3R64VADR  CA' 3R64V!  CA' 3R64V@  VAR:   3R64VAR
4 8  ' MK-IVAR   CA' 4R64VADR  CA' 4R64V!  CA' 4R64V@  VAR:   4R64VAR



[THEN]

cr ." Far arrays? " ?YN
[if] ." Y "
\
 CODE 4R64VADRL <% 8B4512 F7E3 5B 01C3 %>
+CODE 3R64VADRL <% 8B4510 F7E3 5B 01C3 %>
+CODE 2R64VADRL <% 8B450E F7E3 5B 01C3 %>
+CODE 1R64VADRL <% C47D06 8CC0 2BC9 86EF D1E9 01C8  50    B103 D3E3 03DF %>
  next.  end-code \ DI,6[DI]les AX<ES CX-CX CX,1r AX+CS AXpush   BX,3left  BX+DI

 CODE 4R64V!L   <% 8B4510 F7E3 5B 01C3 %>
+CODE 3R64V!L   <% 8B450E F7E3 5B 01C3 %>
+CODE 2R64V!L   <% 8B450C F7E3 5B 01C3 %>
+CODE 1R64V!L   <% C47D04 8CC0 2BC9 86EF D1E9 01C8  8EC0  B103 D3E3 %>
                <% 9B 26 DD19 5B 9B %>
                next.  end-code

 CODE 4R64V@L   <% 8B450E F7E3 5B 01C3 %>
+CODE 3R64V@L   <% 8B450C F7E3 5B 01C3 %>
+CODE 2R64V@L   <% 8B450A F7E3 5B 01C3 %>
+CODE 1R64V@L   <% C47D02 8CC0 2BC9 86EF D1E9 01C8  8EC0  B103 D3E3 %>
                <% 9B 26 DD01 5B 9B %>
                next.  end-code
\
1 8  ' MK-IVARF  CA' 1R64VADRL CA' 1R64V!L CA' 1R64V@L VAR:   1R64VAR-FAR
2 8  ' MK-IVARF  CA' 2R64VADRL CA' 2R64V!L CA' 2R64V@L VAR:   2R64VAR-FAR
3 8  ' MK-IVARF  CA' 3R64VADRL CA' 3R64V!L CA' 3R64V@L VAR:   3R64VAR-FAR
4 8  ' MK-IVARF  CA' 4R64VADRL CA' 4R64V!L CA' 4R64V@L VAR:   4R64VAR-FAR


[then]


\

cr
CR ." Single precision real (R32):"
cr ." Simple? " ?YN
[if] ." Y "
CODE   R32V!   <% 9B D95D04 9B %> next.  end-code
CODE   R32V@   <% 9B D94502 9B %> next.  end-code
0 4  ' MK-VAR   CA' DOADR     CA'  R32V!  CA'  R32V@   VAR:  R32VAR
CODE   R32V!L  <% C47D04 9B 26D91D 9B %> next.  end-code
CODE   R32V@L  <% C47D02 9B 26D905 9B %> next.  end-code
0 4  ' MK-VARF  CA' VADRL     CA'  R32V!L CA'  R32V@L  VAR:  R32VAR-FAR

\ BEHEAD'' R32V! R32V@
[then]


cr ." Local Arrays? " ?YN

[if] ." Y "

 CODE 4R32VADR <% 8B450A F7E3 5B 01C3 %>
+CODE 3R32VADR <% 8B4508 F7E3 5B 01C3 %>
+CODE 2R32VADR <% 8B4506 F7E3 5B 01C3 %>
+CODE 1R32VADR <% 01DB 01DB    8D590E %> next.  end-code

 CODE 4R32V!   <% 8B4508 F7E3 5B 01C3 %>
+CODE 3R32V!   <% 8B4506 F7E3 5B 01C3 %>
+CODE 2R32V!   <% 8B4504 F7E3 5B 01C3 %>
+CODE 1R32V!   <% 01DB 01DB 9B D9590C 5B 9B %> next.  end-code

 CODE 4R32V@   <% 8B4506 F7E3 5B 01C3 %>
+CODE 3R32V@   <% 8B4504 F7E3 5B 01C3 %>
+CODE 2R32V@   <% 8B4502 F7E3 5B 01C3 %>
+CODE 1R32V@   <% 01DB 01DB 9B D9410A 5B 9B %> next.  end-code

1 4  ' MK-IVAR   CA' 1R32VADR  CA' 1R32V!  CA' 1R32V@  VAR: 1R32VAR
2 4  ' MK-IVAR   CA' 2R32VADR  CA' 2R32V!  CA' 2R32V@  VAR: 2R32VAR
3 4  ' MK-IVAR   CA' 3R32VADR  CA' 3R32V!  CA' 3R32V@  VAR: 3R32VAR
4 4  ' MK-IVAR   CA' 4R32VADR  CA' 4R32V!  CA' 4R32V@  VAR: 4R32VAR
\ BEHEAD'' 4R32VADR 1R32V@
[then]

cr ." Far arrays? " ?YN
[if] ." Y "
 CODE 4R32VADRL <% 8B4512 F7E3 5B 01C3 %>
+CODE 3R32VADRL <% 8B4510 F7E3 5B 01C3 %>
+CODE 2R32VADRL <% 8B450E F7E3 5B 01C3 %>
+CODE 1R32VADRL <% C47D06 8CC0 2BC9 86EF D1E9 D1E9 01C8 50 03DB 03DB 03DF %>
  next.  end-code    \ DI,6[DI]les AX<ES CX0 CHxcBH CX,1r CX,1r AX+CX AXpush 4BX BX+DI
 CODE 4R32V!L   <% 8B4510 F7E3 5B 01C3 %>
+CODE 3R32V!L   <% 8B450E F7E3 5B 01C3 %>
+CODE 2R32V!L   <% 8B450C F7E3 5B 01C3 %>
+CODE 1R32V!L   <% C47D04 8CC0 2BC9 86EF D1E9 D1E9 01C8 8EC0 03DB 03DB %>
                <% 9B 26 D919 5B 9B %> next.  end-code
\ DI,4[DI]les AX<ES CX-CX CHxcBH CX,1r CX,1r AX+CX ES<AX 4BX  ES:[BX+DI]<F BXpop

 CODE 4R32V@L   <% 8B450E F7E3 5B 01C3 %>
+CODE 3R32V@L   <% 8B450C F7E3 5B 01C3 %>
+CODE 2R32V@L   <% 8B450A F7E3 5B 01C3 %>
+CODE 1R32V@L   <% C47D02 8CC0 2BC9 86EF D1E9 D1E9 01C8 8EC0 03DB 03DB %>
                <% 9B 26 D901 5B 9B %> next.  end-code

\ DI,4[DI]les AX<ES CX-CX CHxcBH CX,1r CX,1r AX+CX ES<AX 4BX F<ES:[BX+DI]
\
1 4  ' MK-IVARF  CA' 1R32VADRL CA' 1R32V!L CA' 1R32V@L VAR: 1R32VAR-FAR
2 4  ' MK-IVARF  CA' 2R32VADRL CA' 2R32V!L CA' 2R32V@L VAR: 2R32VAR-FAR
3 4  ' MK-IVARF  CA' 3R32VADRL CA' 3R32V!L CA' 3R32V@L VAR: 3R32VAR-FAR
4 4  ' MK-IVARF  CA' 4R32VADRL CA' 4R32V!L CA' 4R32V@L VAR: 4R32VAR-FAR
\ BEHEAD'' 4R32VADRL 1R32V@L

[then]

cr
CR ." Temporary real        (R80): "
cr ." Simple? "  ?YN

[if] ." Y "

CODE   R80V!   <% 9B DB7D04 9B %> next.  end-code

CODE   R80V@   <% 9B DB6D02 9B %> next.  end-code

0 10 ' MK-VAR   CA'  DOADR    CA'  R80V!  CA'  R80V@   VAR:    R80VAR

CODE   R80V!L  <% C47D04 9B 26DB3D 9B %> next.  end-code

CODE   R80V@L  <% C47D02 9B 26DB2D 9B %> next.  end-code
0 10 ' MK-VARF  CA'  VADRL    CA'  R80V!L CA'  R80V@L  VAR:    R80VAR-FAR

\ BEHEAD'' R80V! R80V@


[then]


cr ." Local arrays? " ?YN
[if] ." Y "

 CODE 4R80VADR <% 8B450A F7E3 5B 01C3 %>
+CODE 3R80VADR <% 8B4508 F7E3 5B 01C3 %>
+CODE 2R80VADR <% 8B4506 F7E3 5B 01C3 %>
+CODE 1R80VADR <% 01DB 8BC3 01DB 01DB 03D8    8D590E    %>
                next.
 end-code

 CODE 4R80V!   <% 8B4508 F7E3 5B 01C3 %>
+CODE 3R80V!   <% 8B4506 F7E3 5B 01C3 %>
+CODE 2R80V!   <% 8B4504 F7E3 5B 01C3 %>
+CODE 1R80V!   <% 01DB 8BC3 01DB 01DB 03D8  9B DB790C 5B 9B %>
                next.
 end-code

 CODE 4R80V@   <% 8B4506 F7E3 5B 01C3 %>
+CODE 3R80V@   <% 8B4504 F7E3 5B 01C3 %>
+CODE 2R80V@   <% 8B4502 F7E3 5B 01C3 %>
+CODE 1R80V@   <% 01DB 8BC3 01DB 01DB 03D8  9B DB690A 5B 9B %>
                next.
 end-code

1 10 ' MK-IVAR   CA' 1R80VADR  CA' 1R80V!  CA' 1R80V@  VAR:   1R80VAR
2 10 ' MK-IVAR   CA' 2R80VADR  CA' 2R80V!  CA' 2R80V@  VAR:   2R80VAR
3 10 ' MK-IVAR   CA' 3R80VADR  CA' 3R80V!  CA' 3R80V@  VAR:   3R80VAR
4 10 ' MK-IVAR   CA' 4R80VADR  CA' 4R80V!  CA' 4R80V@  VAR:   4R80VAR

\ BEHEAD'' 4R80VADR 1R80V@
[then]

cr ." Far arrays? " ?YN
[if] ." Y "
\
 CODE 4R80VADRL <% 8B4512 F7E3 5B 01C3 %>
+CODE 3R80VADRL <% 8B4510 F7E3 5B 01C3 %>
+CODE 2R80VADRL <% 8B450E F7E3 5B 01C3 %>
+CODE 1R80VADRL <% C47D06 8CC0 2BD2 86F7 D1EA 8BCA D1E9 D1E9 03CA 01C8 50 %>
                <% 03DB 8BCB 03DB 03DB 03D9 03DF %>
                next.
 end-code

 \ DI,6[DI]les AX<ES DX0 DHxcBH DX,1r CX<DX CX,1r CX,1r  CX+DX AX+CX AXpush
 \ 2BX CX<BX 4BX  BX+CX   BX+DI


 CODE 4R80V!L   <% 8B4510 F7E3 5B 01C3 %>
+CODE 3R80V!L   <% 8B450E F7E3 5B 01C3 %>
+CODE 2R80V!L   <% 8B450C F7E3 5B 01C3 %>
+CODE 1R80V!L   <% C47D04 8CC0 2BD2 86F7 D1EA 8BCA D1E9 D1E9 03CA 01C8 8EC0 %>
                <% 03DB 8BCB 03DB 03DB 03D9     9B   26 DB39 5B 9B %>
                 next.
 end-code

 CODE 4R80V@L   <% 8B450E F7E3 5B 01C3 %>
+CODE 3R80V@L   <% 8B450C F7E3 5B 01C3 %>
+CODE 2R80V@L   <% 8B450A F7E3 5B 01C3 %>
+CODE 1R80V@L   <% C47D02 8CC0 2BD2 86F7 D1EA 8BCA D1E9 D1E9 03CA 01C8 8EC0 %>
                <% 03DB 8BCB 03DB 03DB 03D9     9B   26 DB29 5B 9B %>
                next.
 end-code
\
1 10 ' MK-IVARF  CA' 1R80VADRL CA' 1R80V!L CA' 1R80V@L VAR:   1R80VAR-FAR
2 10 ' MK-IVARF  CA' 2R80VADRL CA' 2R80V!L CA' 2R80V@L VAR:   2R80VAR-FAR
3 10 ' MK-IVARF  CA' 3R80VADRL CA' 3R80V!L CA' 3R80V@L VAR:   3R80VAR-FAR
4 10 ' MK-IVARF  CA' 4R80VADRL CA' 4R80V!L CA' 4R80V@L VAR:   4R80VAR-FAR

\ BEHEAD'' 4R80VADRL 1R80V@L

[then]


cr
CR ." Quad word integer     (I64):"
cr ." Simple? "  ?YN
[if] ." Y "

CODE I64V!     <% 9B DF7D04 9B %> next.  end-code

CODE I64V@     <% 9B DF6D02 9B %> next.  end-code

0 8  ' MK-VAR   CA'  DOADR    CA'  I64V!  CA'  I64V@   VAR:    I64VAR

CODE I64V!L    <% C47D04 9B 26DF3D 9B %> next.  end-code

CODE I64V@L    <% C47D02 9B 26DF2D 9B %> next.  end-code

0 8  ' MK-VARF  CA'  VADRL    CA'  I64V!L CA'  I64V@L  VAR:    I64VAR-FAR

\ BEHEAD'' I64V! I64V@

[then]


cr ." Local arrays? " ?YN
[if] ." Y "
 CODE 4I64VADR <% 8B450A F7E3 5B 01C3 %>
+CODE 3I64VADR <% 8B4508 F7E3 5B 01C3 %>
+CODE 2I64VADR <% 8B4506 F7E3 5B 01C3 %>
+CODE 1I64VADR <% B103 D3E3    8D590E %> next.  end-code

 CODE 4I64V!   <% 8B4508 F7E3 5B 01C3 %>
+CODE 3I64V!   <% 8B4506 F7E3 5B 01C3 %>
+CODE 2I64V!   <% 8B4504 F7E3 5B 01C3 %>
+CODE 1I64V!   <% B103 D3E3   9B DF790C 5B 9B %> next.  end-code

 CODE 4I64V@   <% 8B4506 F7E3 5B 01C3 %>
+CODE 3I64V@   <% 8B4504 F7E3 5B 01C3 %>
+CODE 2I64V@   <% 8B4502 F7E3 5B 01C3 %>
+CODE 1I64V@   <% B103 D3E3   9B DF690A 5B 9B %> next.  end-code

1 8  ' MK-IVAR   CA' 1I64VADR  CA' 1I64V!  CA' 1I64V@  VAR:   1I64VAR
2 8  ' MK-IVAR   CA' 2I64VADR  CA' 2I64V!  CA' 2I64V@  VAR:   2I64VAR
3 8  ' MK-IVAR   CA' 3I64VADR  CA' 3I64V!  CA' 3I64V@  VAR:   3I64VAR
4 8  ' MK-IVAR   CA' 4I64VADR  CA' 4I64V!  CA' 4I64V@  VAR:   4I64VAR

\ BEHEAD'' 4I64VADR 1I64V@
[then]

cr ." Far arrays? " ?YN
[if] ." Y "

 CODE 4I64VADRL <% 8B4512 F7E3 5B 01C3 %>
+CODE 3I64VADRL <% 8B4510 F7E3 5B 01C3 %>
+CODE 2I64VADRL <% 8B450E F7E3 5B 01C3 %>
+CODE 1I64VADRL <% C47D06 8CC0 2BC9 86EF D1E9 01C8  50    B103 D3E3 03DF %>
                next.
 end-code       \ DI,6[DI]les AX<ES CX-CX CX,1r AX+CS AXpush   BX,3left  BX+DI


 CODE 4I64V!L   <% 8B4510 F7E3 5B 01C3 %>
+CODE 3I64V!L   <% 8B450E F7E3 5B 01C3 %>
+CODE 2I64V!L   <% 8B450C F7E3 5B 01C3 %>
+CODE 1I64V!L   <% C47D04 8CC0 2BC9 86EF D1E9 01C8  8EC0  B103 D3E3 %>
                <% 9B 26 DF39 5B 9B %> next.  end-code


 CODE 4I64V@L   <% 8B450E F7E3 5B 01C3 %>
+CODE 3I64V@L   <% 8B450C F7E3 5B 01C3 %>
+CODE 2I64V@L   <% 8B450A F7E3 5B 01C3 %>
+CODE 1I64V@L   <% C47D02 8CC0 2BC9 86EF D1E9 01C8  8EC0  B103 D3E3 %>
                <% 9B 26 DF29 5B 9B %> next.  end-code
\
1 8  ' MK-IVARF  CA' 1I64VADRL CA' 1I64V!L CA' 1I64V@L VAR:   1I64VAR-FAR
2 8  ' MK-IVARF  CA' 2I64VADRL CA' 2I64V!L CA' 2I64V@L VAR:   2I64VAR-FAR
3 8  ' MK-IVARF  CA' 3I64VADRL CA' 3I64V!L CA' 3I64V@L VAR:   3I64VAR-FAR
4 8  ' MK-IVARF  CA' 4I64VADRL CA' 4I64V!L CA' 4I64V@L VAR:   4I64VAR-FAR

\ BEHEAD'' 4I64VADRL 1I64V@L

[then]

cr
CR ." Double word integer   (I32):"
cr ." Simple? "  ?YN
[if] ." Y "

CODE I32V!     <% 9B DB5D04 9B %> next.  end-code

CODE I32V@     <% 9B DB4502 9B %> next.  end-code

0 4  ' MK-VAR   CA' DOADR     CA'  I32V!  CA'  I32V@   VAR:  I32VAR

CODE I32V!L    <% C47D04 9B 26DB1D 9B %> next.  end-code

CODE I32V@L    <% C47D02 9B 26DB05 9B %> next.  end-code

0 4  ' MK-VARF  CA' VADRL     CA'  I32V!L CA'  I32V@L  VAR:  I32VAR-FAR

\ BEHEAD'' I32V! I32V@
[then]


cr ." Local arrays? " ?YN
[if] ." Y "

 CODE 4I32VADR <% 8B450A F7E3 5B 01C3 %>
+CODE 3I32VADR <% 8B4508 F7E3 5B 01C3 %>
+CODE 2I32VADR <% 8B4506 F7E3 5B 01C3 %>
+CODE 1I32VADR <% 01DB 01DB    8D590E %> next.  end-code

 CODE 4I32V!   <% 8B4508 F7E3 5B 01C3 %>
+CODE 3I32V!   <% 8B4506 F7E3 5B 01C3 %>
+CODE 2I32V!   <% 8B4504 F7E3 5B 01C3 %>
+CODE 1I32V!   <% 01DB 01DB 9B DB590C 5B 9B %> next.  end-code

 CODE 4I32V@   <% 8B4506 F7E3 5B 01C3 %>
+CODE 3I32V@   <% 8B4504 F7E3 5B 01C3 %>
+CODE 2I32V@   <% 8B4502 F7E3 5B 01C3 %>
+CODE 1I32V@   <% 01DB 01DB 9B DB410A 5B 9B %> next.  end-code

1 4  ' MK-IVAR   CA' 1I32VADR  CA' 1I32V!  CA' 1I32V@  VAR: 1I32VAR
2 4  ' MK-IVAR   CA' 2I32VADR  CA' 2I32V!  CA' 2I32V@  VAR: 2I32VAR
3 4  ' MK-IVAR   CA' 3I32VADR  CA' 3I32V!  CA' 3I32V@  VAR: 3I32VAR
4 4  ' MK-IVAR   CA' 4I32VADR  CA' 4I32V!  CA' 4I32V@  VAR: 4I32VAR

\ BEHEAD'' 4I32VADR 1I32V@
[then]

cr ." Far arrays? " ?YN
[if] ." Y "

 CODE 4I32VADRL <% 8B4512 F7E3 5B 01C3 %>
+CODE 3I32VADRL <% 8B4510 F7E3 5B 01C3 %>
+CODE 2I32VADRL <% 8B450E F7E3 5B 01C3 %>
+CODE 1I32VADRL <% C47D06 8CC0 2BC9 86EF D1E9 D1E9 01C8 50 03DB 03DB 03DF %>
                 next.
 end-code    \ DI,6[DI]les AX<ES CX0 CHxcBH CX,1r CX,1r AX+CX AXpush 4BX BX+DI

 CODE 4I32V!L   <% 8B4510 F7E3 5B 01C3 %>
+CODE 3I32V!L   <% 8B450E F7E3 5B 01C3 %>
+CODE 2I32V!L   <% 8B450C F7E3 5B 01C3 %>
+CODE 1I32V!L   <% C47D04 8CC0 2BC9 86EF D1E9 D1E9 01C8 8EC0 03DB 03DB %>
                <% 9B 26 DB19 5B 9B %>
                next.
end-code \ DI,4[DI]les AX<ES CX-CX CHxcBH CX,1r CX,1r AX+CX ES<AX 4BX  ES:[BX+DI]<F BXpop

 CODE 4I32V@L   <% 8B450E F7E3 5B 01C3 %>
+CODE 3I32V@L   <% 8B450C F7E3 5B 01C3 %>
+CODE 2I32V@L   <% 8B450A F7E3 5B 01C3 %>
+CODE 1I32V@L   <% C47D02 8CC0 2BC9 86EF D1E9 D1E9 01C8 8EC0 03DB 03DB %>
                <% 9B 26 DB01 5B 9B %>
                next.
end-code \ DI,4[DI]les AX<ES CX-CX CHxcBH CX,1r CX,1r AX+CX ES<AX 4BX F<ES:[BX+DI]
\
1 4  ' MK-IVARF  CA' 1I32VADRL CA' 1I32V!L CA' 1I32V@L VAR: 1I32VAR-FAR
2 4  ' MK-IVARF  CA' 2I32VADRL CA' 2I32V!L CA' 2I32V@L VAR: 2I32VAR-FAR
3 4  ' MK-IVARF  CA' 3I32VADRL CA' 3I32V!L CA' 3I32V@L VAR: 3I32VAR-FAR
4 4  ' MK-IVARF  CA' 4I32VADRL CA' 4I32V!L CA' 4I32V@L VAR: 4I32VAR-FAR
 \ BEHEAD'' 4I32VADRL 1I32V@L
[then]


cr
CR ." Single word integer   (I16):"
cr ." Simple? "  ?YN
[if] ." Y "
CODE   I16V!   <% 9B DF5D04 9B %> next.  end-code

CODE   I16V@   <% 9B DF4502 9B %> next.  end-code

0 2  ' MK-VAR   CA' DOADR     CA' I16V!   CA' I16V@    VAR:    I16VAR

CODE   I16V!L  <% C47D04 9B 26DF1D 9B %> next.  end-code

CODE   I16V@L  <% C47D02 9B 26DF05 9B %> next.  end-code

0 2  ' MK-VARF  CA' VADRL     CA' I16V!L  CA' I16V@L   VAR:    I16VAR-FAR

\ BEHEAD'' I16V! I16V@
[then]

cr ." Local arrays? " ?YN
[if] ." Y "
 CODE 4I16VADR <% 8B450A F7E3 5B 01C3 %>
+CODE 3I16VADR <% 8B4508 F7E3 5B 01C3 %>
+CODE 2I16VADR <% 8B4506 F7E3 5B 01C3 %>
+CODE 1I16VADR <%   01DB 8D590E          %> next.  end-code \ BX+BX  BX,E[BX+DI]lea


 CODE 4I16V!   <% 8B4508 F7E3 5B 01C3 %>
+CODE 3I16V!   <% 8B4506 F7E3 5B 01C3 %>
+CODE 2I16V!   <% 8B4504 F7E3 5B 01C3 %>
+CODE 1I16V!   <%   01DB 9B DF590C 5B 9B %> next.  end-code \ 2BX 0C[BX+DI]<F BXpop


 CODE 4I16V@   <% 8B4506 F7E3 5B 01C3 %>
+CODE 3I16V@   <% 8B4504 F7E3 5B 01C3 %>
+CODE 2I16V@   <% 8B4502 F7E3 5B 01C3 %>
+CODE 1I16V@   <%   01DB 9B DF410A 5B 9B %> next.  end-code \ 2BX F<0A[BX+DI]mov BXpop

1 2  ' MK-IVAR   CA' 1I16VADR  CA' 1I16V!  CA' 1I16V@  VAR:   1I16VAR
2 2  ' MK-IVAR   CA' 2I16VADR  CA' 2I16V!  CA' 2I16V@  VAR:   2I16VAR
3 2  ' MK-IVAR   CA' 3I16VADR  CA' 3I16V!  CA' 3I16V@  VAR:   3I16VAR
4 2  ' MK-IVAR   CA' 4I16VADR  CA' 4I16V!  CA' 4I16V@  VAR:   4I16VAR

\ BEHEAD'' 4I16VADR 1I16V@
[then]


cr ." Far arrays? " ?YN
[if] ." Y "

 CODE 4I16VADRL <% 8B4512 F7E3 5B 01C3 %>
+CODE 3I16VADRL <% 8B4510 F7E3 5B 01C3 %>
+CODE 2I16VADRL <% 8B450E F7E3 5B 01C3 %>
+CODE 1I16VADRL <% C47D06 8CC0 03FB 03FB 8BDF 7303 050010 50 %> next.  end-code
              \ DI,4[DI]les AX<ES DI+BX DI+BX BX<DI JNC AX+1000 >>> AXpush

 CODE 4I16V!L   <% 8B4510 F7E3 5B 01C3 %>
+CODE 3I16V!L   <% 8B450E F7E3 5B 01C3 %>
+CODE 2I16V!L   <% 8B450C F7E3 5B 01C3 %>
+CODE 1I16V!L <% C47D04 03FB 03FB 8BDF 7307 8CC0 050010 8EC0 9B 26 DF1F 5B 9B %>
  next.  end-code    \ DI,4[DI]les DI+BX DI+BX BX<DI JNC AX<ES AX+1000 ES<AX
              \ >>> ES: [BX]fistp  BXpop

 CODE 4I16V@L   <% 8B450E F7E3 5B 01C3 %>
+CODE 3I16V@L   <% 8B450C F7E3 5B 01C3 %>
+CODE 2I16V@L   <% 8B450A F7E3 5B 01C3 %>
+CODE 1I16V@L <% C47D02 03FB 03FB 8BDF 7307 8CC0 050010 8EC0 9B 26 DF07 5B 9B %>
  next.  end-code    \ DI,4[DI]les DI+BX DI+BX BX<DI JNC AX<ES AX+1000 ES<AX
              \ >>> ES: [BX]fld  BXpop

1 2  ' MK-IVARF  CA' 1I16VADRL CA' 1I16V!L CA' 1I16V@L VAR:   1I16VAR-FAR
2 2  ' MK-IVARF  CA' 2I16VADRL CA' 2I16V!L CA' 2I16V@L VAR:   2I16VAR-FAR
3 2  ' MK-IVARF  CA' 3I16VADRL CA' 3I16V!L CA' 3I16V@L VAR:   3I16VAR-FAR
4 2  ' MK-IVARF  CA' 4I16VADRL CA' 4I16V!L CA' 4I16V@L VAR:   4I16VAR-FAR

\ BEHEAD'' 4I16VADRL 1I16V@L

[then]


cr
CR ." Binary coded decimal  (BCD):"
cr ." Simple? "  ?YN
[if] ." Y "
CODE   BCDV!   <% 9B DF7504 9B %> next.  end-code

CODE   BCDV@   <% 9B DF6502 9B %> next.  end-code

0 10 ' MK-VAR   CA'  DOADR    CA'  BCDV!  CA'  BCDV@   VAR:    BCDVAR

CODE   BCDV!L  <% C47D04 9B 26DF35 9B %> next.  end-code

CODE   BCDV@L  <% C47D02 9B 26DF25 9B %> next.  end-code

0 10 ' MK-VARF  CA'  VADRL    CA'  BCDV!L CA'  BCDV@L  VAR:    BCDVAR-FAR

\ BEHEAD'' BCDV! BCDV@
[then]


cr ." Local arrays? " ?YN
[if] ." Y "
 CODE 4BCDVADR <% 8B450A F7E3 5B 01C3 %>
+CODE 3BCDVADR <% 8B4508 F7E3 5B 01C3 %>
+CODE 2BCDVADR <% 8B4506 F7E3 5B 01C3 %>
+CODE 1BCDVADR <% 01DB 8BC3 01DB 01DB 03D8    8D590E    %> next.  end-code

 CODE 4BCDV!   <% 8B4508 F7E3 5B 01C3 %>
+CODE 3BCDV!   <% 8B4506 F7E3 5B 01C3 %>
+CODE 2BCDV!   <% 8B4504 F7E3 5B 01C3 %>
+CODE 1BCDV!   <% 01DB 8BC3 01DB 01DB 03D8  9B DF710C 5B 9B %> next.  end-code

 CODE 4BCDV@   <% 8B4506 F7E3 5B 01C3 %>
+CODE 3BCDV@   <% 8B4504 F7E3 5B 01C3 %>
+CODE 2BCDV@   <% 8B4502 F7E3 5B 01C3 %>
+CODE 1BCDV@   <% 01DB 8BC3 01DB 01DB 03D8  9B DF610A 5B 9B %> next.  end-code

1 10 ' MK-IVAR   CA' 1BCDVADR  CA' 1BCDV!  CA' 1BCDV@  VAR:   1BCDVAR
2 10 ' MK-IVAR   CA' 2BCDVADR  CA' 2BCDV!  CA' 2BCDV@  VAR:   2BCDVAR
3 10 ' MK-IVAR   CA' 3BCDVADR  CA' 3BCDV!  CA' 3BCDV@  VAR:   3BCDVAR
4 10 ' MK-IVAR   CA' 4BCDVADR  CA' 4BCDV!  CA' 4BCDV@  VAR:   4BCDVAR

\ BEHEAD'' 4BCDVADR 1BCDV@ [then]


cr ." Far arrays? " ?YN
[if] ." Y "

 CODE 4BCDVADRL <% 8B4512 F7E3 5B 01C3 %>
+CODE 3BCDVADRL <% 8B4510 F7E3 5B 01C3 %>
+CODE 2BCDVADRL <% 8B450E F7E3 5B 01C3 %>
+CODE 1BCDVADRL <% C47D06 8CC0 2BD2 86F7 D1EA 8BCA D1E9 D1E9 03CA 01C8 50 %>
                <% 03DB 8BCB 03DB 03DB 03D9 03DF %>  next.  end-code
    \ DI,6[DI]les AX<ES DX0 DHxcBH DX,1r CX<DX CX,1r CX,1r  CX+DX AX+CX AXpush
    \ 2BX CX<BX 4BX  BX+CX   BX+DI

 CODE 4BCDV!L   <% 8B4510 F7E3 5B 01C3 %>
+CODE 3BCDV!L   <% 8B450E F7E3 5B 01C3 %>
+CODE 2BCDV!L   <% 8B450C F7E3 5B 01C3 %>
+CODE 1BCDV!L   <% C47D04 8CC0 2BD2 86F7 D1EA 8BCA D1E9 D1E9 03CA 01C8 8EC0 %>
                <% 03DB 8BCB 03DB 03DB 03D9     9B   26 DF39 5B 9B %> next.  end-code

 CODE 4BCDV@L   <% 8B450E F7E3 5B 01C3 %>
+CODE 3BCDV@L   <% 8B450C F7E3 5B 01C3 %>
+CODE 2BCDV@L   <% 8B450A F7E3 5B 01C3 %>
+CODE 1BCDV@L   <% C47D02 8CC0 2BD2 86F7 D1EA 8BCA D1E9 D1E9 03CA 01C8 8EC0 %>
                <% 03DB 8BCB 03DB 03DB 03D9     9B   26 DF29 5B 9B %> next.  end-code

\
1 10 ' MK-IVARF  CA' 1BCDVADRL CA' 1BCDV!L CA' 1BCDV@L VAR:   1BCDVAR-FAR
2 10 ' MK-IVARF  CA' 2BCDVADRL CA' 2BCDV!L CA' 2BCDV@L VAR:   2BCDVAR-FAR
3 10 ' MK-IVARF  CA' 3BCDVADRL CA' 3BCDV!L CA' 3BCDV@L VAR:   3BCDVAR-FAR
4 10 ' MK-IVARF  CA' 4BCDVADRL CA' 4BCDV!L CA' 4BCDV@L VAR:   4BCDVAR-FAR


[then]


behead'' 4R64VADRL 1R64V@L
behead'' 4R64VADR 1R64V@
behead'' 4BCDVADRL 1BCDV@L


